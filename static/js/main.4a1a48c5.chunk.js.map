{"version":3,"sources":["components/NumberCard.jsx","components/Counter.jsx","App.jsx","reportWebVitals.js","index.jsx"],"names":["NumberCard","number","description","useState","time","setTime","useEffect","className","memo","Counter","toDate","whenDone","days","hours","minutes","seconds","times","setTimes","x","setInterval","now","Date","getTime","distance","Math","floor","clearInterval","App","titleText","state","setState","id","href","aria-hidden","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4a1a48c5.chunk.js","sourcesContent":["import React, { memo, useEffect, useState } from \"react\";\n\nconst NumberCard = ({ number, description }) => {\n    const [time, setTime] = useState(number);\n\n    useEffect(() => {\n        if (\n            number === 1 ||\n            number === 2 ||\n            number === 3 ||\n            number === 4 ||\n            number === 5 ||\n            number === 6 ||\n            number === 7 ||\n            number === 8 ||\n            number === 9 ||\n            number === 0\n        ) {\n            setTime(\"0\" + number);\n        } else {\n            setTime(number);\n        }\n    }, [number]);\n\n    return (\n        <div className=\"number-card\">\n            <div className=\"number-card__number-wrapper\">\n                <div className=\"number-card__number-content\">\n                    <div className=\"number-card__layer\"></div>\n                    <div className=\"number-card__number\">{time}</div>\n                </div>\n            </div>\n            <div className=\"number-card__description\">{description}</div>\n        </div>\n    );\n};\n\nexport default memo(NumberCard);\n","import React, { useEffect, useState } from \"react\";\nimport NumberCard from \"./NumberCard\";\n\nconst Counter = ({ toDate, whenDone }) => {\n    const [times, setTimes] = useState({\n        days: 0,\n        hours: 0,\n        minutes: 0,\n        seconds: 0,\n    });\n\n    useEffect(() => {\n        const x = setInterval(() => {\n            const now = new Date().getTime();\n            const distance = new Date(toDate).getTime() - now;\n            const days = Math.floor(distance / (1000 * 60 * 60 * 24));\n            const hours = Math.floor(\n                (distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)\n            );\n            const minutes = Math.floor(\n                (distance % (1000 * 60 * 60)) / (1000 * 60)\n            );\n            const seconds = Math.floor((distance % (1000 * 60)) / 1000);\n\n            setTimes({\n                ...times,\n                days,\n                hours,\n                minutes,\n                seconds,\n            });\n\n            if (distance < 0) {\n                clearInterval(x);\n                whenDone();\n                setTimes({\n                    days: 0,\n                    hours: 0,\n                    minutes: 0,\n                    seconds: 0,\n                });\n            }\n        }, 1000);\n\n        return () => {\n            clearInterval(x);\n        };\n    }, []);\n\n    return (\n        <div className=\"number-cards\">\n            <div className=\"number-cards__unit\">\n                <NumberCard number={times.days} description={\"Days\"} />\n            </div>\n            <div className=\"number-cards__unit\">\n                <NumberCard number={times.hours} description={\"Hours\"} />\n            </div>\n            <div className=\"number-cards__unit\">\n                <NumberCard number={times.minutes} description={\"Minutes\"} />\n            </div>\n            <div className=\"number-cards__unit\">\n                <NumberCard number={times.seconds} description={\"Seconds\"} />\n            </div>\n        </div>\n    );\n};\n\nexport default Counter;\n","import { useState } from \"react\";\nimport Counter from \"./components/Counter\";\n\nconst App = () => {\n    const [state, setState] = useState({\n        titleText: \"We're launching soon\",\n    });\n\n    const onWhenDone = () => {\n        setState({\n            ...state,\n            titleText: \"We are launched!\",\n        });\n    };\n\n    return (\n        <main id=\"page-wrapper\">\n            <header className=\"title\">\n                <h1>{state.titleText}</h1>\n            </header>\n            <section className=\"counter\">\n                <Counter\n                    toDate=\"September 1, 2021 08:00:00\"\n                    whenDone={onWhenDone}\n                />\n            </section>\n            <section className=\"socials\">\n                <a href=\"https://www.facebook.com\">\n                    <i\n                        className=\"fab fa-facebook-square\"\n                        aria-hidden=\"true\"\n                    ></i>\n                    <span className=\"visible-hidden\">Facebook</span>\n                </a>\n                <a href=\"https://www.pinterest.com\">\n                    <i className=\"fab fa-pinterest\" aria-hidden=\"true\"></i>\n                    <span className=\"visible-hidden\">Pinterest</span>\n                </a>\n                <a href=\"https://www.instagram.com\">\n                    <i className=\"fab fa-instagram\" aria-hidden=\"true\"></i>\n                    <span className=\"visible-hidden\">Instagram</span>\n                </a>\n            </section>\n        </main>\n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"normalize.css\";\nimport \"./scss/styles.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}